"use strict";
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/react17/index.tsx
var react17_exports = {};
__export(react17_exports, {
  useTree: () => useTree
});
module.exports = __toCommonJS(react17_exports);
var import_react = require("react");
var import_core = require("@headless-tree/core");
var useTree = (config) => {
  const [tree] = (0, import_react.useState)(() => ({ current: (0, import_core.createTree)(config) }));
  const [state, setState] = (0, import_react.useState)(
    () => tree.current.getState()
  );
  (0, import_react.useEffect)(() => {
    tree.current.rebuildTree();
  }, [tree]);
  tree.current.setConfig((prev) => __spreadProps(__spreadValues(__spreadValues({}, prev), config), {
    state: __spreadValues(__spreadValues({}, state), config.state),
    setState: (state2) => {
      var _a;
      setState(state2);
      (_a = config.setState) == null ? void 0 : _a.call(config, state2);
    }
  }));
  return tree.current;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  useTree
});
